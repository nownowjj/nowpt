server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}


chatgpt:
  api:
    endpoint: https://api.openai.com
    api-key: ${CHAT_GPT_KEY}

kakaoLogin:
  clientId: ${KAKAO_LOGIN_ID}

naverLogin:
  clientId: ${NAVER_LOGIN_ID}
  clientSecret: ${NAVER_SECRET}

weather:
  api-key: ${WEATHER_KEY}

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_NAME}
    password: ${MAIL_PW}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
#    url: jdbc:oracle:thin:@sbddr3_high?TNS_ADMIN=./src/main/resources/Wallet_sbddr3_2/
    url: jdbc:oracle:thin:@adb.ap-chuncheon-1.oraclecloud.com:1522/g9fa8594d6820a7_sbddr3_high.adb.oraclecloud.com
    username: ${DB_NAME}
    password: ${DB_PW}
  jpa:
    properties:
      hibernate:
        highlight_sql: true  #SQL 출력을 ANSI escape codes를 사용하여 색을 부여합니다.
        format_sql: true
        use_sql_comments: true  # sql ??? ????? ?????.
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    show-sql: false
mybatis:
  type-aliases-package: com.example.nowpt.mvc.dto  # entity가 존재하는 경로작성.
  mapper-locations: mapper/**.xml        # XmlMapper.xml이 존재하는 경로작성.


logging:
  level:
    '[com.example.nowpt]': debug
    org:
      hibernate:
        type:
          descriptor:
            sql: debug  # query? ?? ?? ?? ????? ??? ? ?? ?????. TRACE Log? ?? ?????.